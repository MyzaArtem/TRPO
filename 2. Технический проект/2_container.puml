@startuml C4. Контейнеры
left to right direction

title C4. Контейнеры: Система семейного бюджета

!include <C4/C4_Container>

Person(family_member, "Член семьи", "Учет личных доходов и расходов, просмотр общего бюджета.")
Person(head_of_family, "Глава семьи", "Планирование общего бюджета, контроль расходов, создание сберегательных целей.")
Person(child, "Ребенок", "Внесение заработанных денег, отслеживание расходов и целей.")

System_Boundary(budget_system, "Система семейного бюджета") {
    Container(web_app, "Веб-приложение", "React", "Интерфейс пользователя для взаимодействия с системой через браузер")
    Container(mobile_app, "Мобильное приложение", "React Native", "Приложение для мобильных устройств (iOS, Android)")
    Container(api_gateway, "API шлюз", "Nginx", "Управление маршрутизацией запросов к различным сервисам")
    System_Boundary(services, "Сервисы") {
        Container(auth_service, "Сервис аутентификации", "Node.js, Express", "Управление авторизацией и сессиями пользователей")
        Container(financial_management_service, "Сервис управления финансами", "Node.js, Express", "Обработка операций с доходами, расходами, бюджетами и целями")
        Container(reporting_service, "Сервис отчетности", "Node.js, Express", "Генерация отчетов, графиков и анализа данных о финансах")
        Container(integration_service, "Сервис интеграции", "Node.js, Express", "Интеграция с внешними финансовыми сервисами")
    }
    Container(rabbitmq, "Шина сообщений", "RabbitMQ", "Обмен сообщениями между сервисами")
    Container(database, "База данных", "PostgreSQL", "Хранение данных о пользователях, расходах, доходах и целях")
}

System_Ext(bank_system, "Банковская система", "Интеграция с банковскими счетами и транзакциями для учета доходов и расходов.")
System_Ext(finance_app, "Другие финансовые приложения", "Импорт данных о расходах и доходах из других приложений.")
System_Ext(email_system, "Email сервис", "Отправка уведомлений и отчетов пользователям.")

Rel(family_member, web_app, "Использует для учета доходов и расходов", "HTTPS/JSON")
Rel(head_of_family, web_app, "Использует для управления общим бюджетом", "HTTPS/JSON")
Rel(child, web_app, "Использует для отслеживания своих расходов и целей", "HTTPS/JSON")

Rel(web_app, api_gateway, "Маршрутизирует запросы", "HTTPS/JSON")
Rel(mobile_app, api_gateway, "Маршрутизирует запросы", "HTTPS/JSON")

Rel(api_gateway, auth_service, "Маршрутизирует запросы", "HTTPS/JSON")
Rel(api_gateway, financial_management_service, "Маршрутизирует запросы", "HTTPS/JSON")
Rel(api_gateway, reporting_service, "Маршрутизирует запросы", "HTTPS/JSON")
Rel(api_gateway, integration_service, "Маршрутизирует запросы", "HTTPS/JSON")

Rel(services, database, "Читает/Пишет данные", "SQL/TCP (PostgreSQL)")
Rel(services, rabbitmq, "Обменивается сообщениями", "AMQP/TCP")

financial_management_service --> bank_system : "Интеграция с банковской системой\n[HTTPS/JSON (REST API)]\n(Сервис управления финансами)"
financial_management_service ---[hidden]---> bank_system 
integration_service --> finance_app : "Импорт данных из финансовых приложений\n[HTTPS/JSON (REST API)]\n(Сервис интеграции)"
integration_service ---[hidden]---> finance_app 
reporting_service --> email_system : "Отправка отчетов по email\n[HTTPS/JSON (REST API)]\n(Сервис отчетности)"
reporting_service ---[hidden]---> email_system

@enduml
